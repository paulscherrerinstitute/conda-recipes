sudo: required

services:
    - docker

language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
    - os: osx

install:
  # Variant config file
  - cp conda_build_config.yaml $HOME
  # Expand CONDA_CMD alias
  - shopt -s expand_aliases
  # Set the anaconda environment
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$CONDA_PY" == "2.7" ]]; then
        curl https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -o miniconda.sh;
      else
        curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda.sh;
      fi;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      alias CONDA_CMD=conda;
    else
      mkdir -m 777 -p ${HOME}/miniconda/conda-bld;
      ./start_docker.sh ${HOME}/miniconda/conda-bld;
      alias CONDA_CMD="./conda_in_docker.sh";
    fi
  - CONDA_CMD config --set always_yes yes --set changeps1 no
  - '[[ -z "$CONDA_TOKEN" ]] || CONDA_CMD config --set anaconda_upload yes'
  - if [[ -z "$CONDA_TOKEN" ]]; then
      export CONDA_TOKEN=token_placeholder;
    fi
  - CONDA_CMD config --add channels defaults
  - CONDA_CMD update -q --all
  # avoid downloading MKL of huge size
  - CONDA_CMD install nomkl
  - CONDA_CMD install conda-build numpy anaconda-client
  # build
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing brotli
  - '[[ "$TRAVIS_OS_NAME" != "linux" ]] || CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing readline'
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing epics-base
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing pyepics
  #- CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing h5py
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing lzf
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing bottle
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing xrayutilities
  #- CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing bitshuffle
  - '[[ "$TRAVIS_OS_NAME" != "linux" ]] || CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing zeromq'
  - '[[ "$TRAVIS_OS_NAME" != "linux" ]] || CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing cx_oracle'
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing tinydb
  - CONDA_CMD build -c $CONDA_CHANNEL --token $CONDA_TOKEN --skip-existing xrt

script:
  - echo "No test scripts to be run!"
