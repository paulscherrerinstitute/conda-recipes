--- configure/os/CONFIG.Common.darwin-aarch64	1970-01-01 01:00:00.000000000 +0100
+++ configure/os/CONFIG.Common.darwin-aarch64	2022-11-28 08:17:48.341754407 +0100
@@ -0,0 +1,14 @@
+# CONFIG.Common.darwin-aarch64
+#
+# This file is maintained by the build community.
+#
+# Definitions for darwin-aarch64 target builds
+# Sites may override these definitions in CONFIG_SITE.Common.darwin-aarch64
+#-------------------------------------------------------
+
+#
+# To build universal binaries, configure ARCH_CLASS
+# in the file CONFIG_SITE.Common.darwin-aarch64
+
+# Include definitions common to all Darwin targets
+include $(CONFIG)/os/CONFIG.darwinCommon.darwinCommon
--- configure/os/CONFIG.darwin-aarch64.Common	1970-01-01 01:00:00.000000000 +0100
+++ configure/os/CONFIG.darwin-aarch64.Common	2022-11-28 08:18:19.319164223 +0100
@@ -0,0 +1,8 @@
+# CONFIG.darwin-aarch64.Common
+#
+# Definitions for darwin-aarch64 host builds
+# Sites may override these definitions in CONFIG_SITE.darwin-aarch64.Common
+#-------------------------------------------------------
+
+#Include definitions common to unix hosts
+include $(CONFIG)/os/CONFIG.UnixCommon.Common
--- configure/os/CONFIG_SITE.Common.darwin-aarch64	1970-01-01 01:00:00.000000000 +0100
+++ configure/os/CONFIG_SITE.Common.darwin-aarch64	2022-11-28 08:17:37.500801673 +0100
@@ -0,0 +1,12 @@
+# CONFIG_SITE.Common.darwin-aarch64
+#
+# Site override definitions for darwin-aarch64 target builds
+#-------------------------------------------------------
+
+#
+#   arm64 devices:  Apple Silicon M1
+
+ARCH_CLASS = arm64
+
+ARCH_DEP_CFLAGS += -mmacosx-version-min=11.0
+ARCH_DEP_LDFLAGS += -mmacosx-version-min=11.0
--- src/tools/EpicsHostArch.pl	2022-11-28 08:16:47.015923189 +0100
+++ src/tools/EpicsHostArch.pl	2022-11-28 08:48:52.132752942 +0100
@@ -34,6 +34,8 @@
         return 'linux-x86_64'   if m/^x86_64-linux/;
         return 'linux-x86'      if m/^i[3-6]86-linux/;
         return 'linux-arm'      if m/^arm-linux/;
+        return 'linux-aarch64'  if m/^aarch64-linux/;
+        return 'linux-ppc64'    if m/^powerpc64-linux/;
         return 'windows-x64'    if m/^MSWin32-x64/;
         return 'win32-x86'      if m/^MSWin32-x86/;
         return "cygwin-x86_64"  if m/^x86_64-cygwin/;
@@ -46,6 +48,7 @@
             for ($cpu) {
                 return 'darwin-x86' if m/^(i386|x86_64)/;
                 return 'darwin-ppc' if m/Power Macintosh/;
+                return 'darwin-aarch64' if m/^arm64/;
             }
             die "$0: macOS CPU type '$cpu' not recognized\n";
         }
