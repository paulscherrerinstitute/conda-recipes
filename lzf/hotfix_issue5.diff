--- lzfP.h
+++ lzfP.h
@@ -141,7 +141,7 @@ using namespace std;
 #endif
 
 #ifndef LZF_USE_OFFSETS
-# if defined (WIN32)
+# if defined (_WIN32)
 #  define LZF_USE_OFFSETS defined(_M_X64)
 # else
 #  if __cplusplus > 199711L
--- lzf_c.c
+++ lzf_c.c
@@ -119,7 +119,7 @@ lzf_compress (const void *const in_data, unsigned int in_len,
    * and fails to support both assumptions is windows 64 bit, we make a
    * special workaround for it.
    */
-#if defined (WIN32) && defined (_M_X64)
+#if defined (_WIN32) && defined (_M_X64)
   unsigned _int64 off; /* workaround for missing POSIX compliance */
 #else
   unsigned long off;
--- lzf_module.c
+++ lzf_module.c
@@ -28,7 +28,7 @@ python_compress(PyObject *self, PyObject *args) {
         return NULL;
 
     if (pyoutlen == Py_None)
-        outlen = inlen - 1;
+        outlen = ((inlen * 33) >> 5 ) + 1;
     else if (PyInt_CheckExact(pyoutlen))
         outlen = PyInt_AsLong(pyoutlen);
     else if (PyLong_CheckExact(pyoutlen))
